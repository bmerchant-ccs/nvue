---

- name: Test playbook to setup static VXLAN
  hosts: cumulus
  connection: ansible.netcommon.httpapi
  gather_facts: false
  vars:
    ansible_network_os: nvidia.nvue.httpapi
    ansible_httpapi_port: 8765
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false

  tasks:
    - name: Create new revision
      nvidia.nvue.config:
        state: new
      register: revision

    - name: dump revision
      debug:
        msg: '{{ revision.revid }}'

    - name: Set interface
      nvidia.nvue.interface:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          - id: 'eth0'
            ip:
              address:
                - id: '192.168.200.11/24'
              vrf: 'mgmt'
            type: 'eth'
          - id: 'lo'
            ip:
              address:
                - id: '10.10.10.1/32'
            type: 'loopback'
          - id: 'swp51'
            link:
              state:
                - id: 'up'
            type: 'swp'
          - id: 'swp52'
            link:
              state:
                - id: 'up'
            type: 'swp'

    - name: Set bridge
      nvidia.nvue.bridge:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          - id: 'br_default'
            type: 'vlan-aware'
            vlan:
              - id: '10'
                vni:
                  - id: '10'
                    flooding:
                      head_end_replication:
                        - id: '10.10.10.2'
                        - id: '10.10.10.3'
              - id: '20'
                vni:
                  - id: '20'
                    flooding:
                      head_end_replication:
                        - id: '10.10.10.4'

    - name: Set vxlan
      vxlan:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          enable: 'on'
          source:
            address: '10.10.10.1'

    - name: Configure swp interface
      nvidia.nvue.interface:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          - id: 'swp1'
            bridge:
              domain:
                - id: 'br_default'
                  access: 10
          - id: 'swp2'
            bridge:
              domain:
                - id: 'br_default'
                  access: 10

    - name: Apply new revision
      nvidia.nvue.config:
        state: apply
        revid: '{{ revision.revid }}'
        force: true
        wait: 10
      register: revision

    - name: dump previous output
      debug:
        msg: '{{ revision }}'

    - name: Get the current config
      nvidia.nvue.api:
        operation: get
      register: output

    - name: Print current config
      ansible.builtin.debug:
        msg: "{{ output }}"